= Build Status
{<img src="https://travis-ci.org/samlawrencejones/rails-tdd.svg" alt="Build Status" />}[https://travis-ci.org/samlawrencejones/rails-tdd]
{<img src="https://coveralls.io/repos/samlawrencejones/rails-tdd/badge.svg?branch=master&service=github" alt="Coverage Status" />}[https://coveralls.io/github/samlawrencejones/rails-tdd?branch=master]

== Follow my progress on my blog! 
http://samljones.com/tdd-ci-rails/2015/10

== Requires RVM
https://rvm.io

== Install
$ rake install

== Run all tests
$ rake travis

== Guard
Guard rspec and cucumber are installed. To use guard, run the command

$ guard

=Technique
Test your code, not the framework!

== Tools
- Testing
  - RSpec https://github.com/rspec/rspec-rails
  - Capybara https://github.com/jnicklas/capybara
  - FactoryGirl https://github.com/thoughtbot/factory_girl_rails
  - Faker https://github.com/stympy/faker
  - Database cleaner https://github.com/DatabaseCleaner/database_cleaner
  - Guard RSpec https://github.com/guard/guard-rspec
  - Guard Cucumber https://github.com/guard/guard-cucumber
- Development
  - Responders https://github.com/plataformatec/responders

== RSpec Test Layers
- Models
  - Test only validation and custom methods.
- Controllers
  - Keep these thin, and only test custom methods, not delegations.
- Controller Helpers
  - Keep the bulk of controller logic here and test thouroughly.
- Responses
  - JSON: Test these by parsing the json response.

== Cucumber Test Layer
- HTML: Test these with Page Objects by leveraging Capybara. Test dynamic elements / conditionals thouroughly.
